input_layer= Input(shape=(<x_train>.shape[1]))
x=Dense(32,'relu')(input_layer)
x=Dropout(0.2)(x)
x=Dense(16,'relu')(x)
x=Dropout(0.2)(x)
x=Dense(1,'sigmoid')(x)

<model> = Model(inputs=input_layer, outputs=x)
model.compile(optimizer ='adam',
  loss='binary_crossentropy',
  metrics=['accuracy'])
hist=model.fit(np.array(<x_train>), np.array(<y_train>), epochs=1,
          validation_data=(np.array(<x_test>), np.array(<y_test>)))
<***>
model=model
x_train=x_train
y_train=y_train
x_test=x_test
y_test=y_test
